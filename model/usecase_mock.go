// Code generated by MockGen. DO NOT EDIT.
// Source: usecase.go

// Package model is a generated GoMock package.
package model

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockUsecaseHandler is a mock of UsecaseHandler interface.
type MockUsecaseHandler struct {
	ctrl     *gomock.Controller
	recorder *MockUsecaseHandlerMockRecorder
}

// MockUsecaseHandlerMockRecorder is the mock recorder for MockUsecaseHandler.
type MockUsecaseHandlerMockRecorder struct {
	mock *MockUsecaseHandler
}

// NewMockUsecaseHandler creates a new mock instance.
func NewMockUsecaseHandler(ctrl *gomock.Controller) *MockUsecaseHandler {
	mock := &MockUsecaseHandler{ctrl: ctrl}
	mock.recorder = &MockUsecaseHandlerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockUsecaseHandler) EXPECT() *MockUsecaseHandlerMockRecorder {
	return m.recorder
}

// CreateAccount mocks base method.
func (m *MockUsecaseHandler) CreateAccount(ctx context.Context, req AccountRequest) (*AccountResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateAccount", ctx, req)
	ret0, _ := ret[0].(*AccountResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateAccount indicates an expected call of CreateAccount.
func (mr *MockUsecaseHandlerMockRecorder) CreateAccount(ctx, req interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateAccount", reflect.TypeOf((*MockUsecaseHandler)(nil).CreateAccount), ctx, req)
}

// LoginAccount mocks base method.
func (m *MockUsecaseHandler) LoginAccount(ctx context.Context, req AccountRequest) (*AccountResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "LoginAccount", ctx, req)
	ret0, _ := ret[0].(*AccountResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// LoginAccount indicates an expected call of LoginAccount.
func (mr *MockUsecaseHandlerMockRecorder) LoginAccount(ctx, req interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "LoginAccount", reflect.TypeOf((*MockUsecaseHandler)(nil).LoginAccount), ctx, req)
}
