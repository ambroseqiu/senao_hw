// Code generated by swaggo/swag. DO NOT EDIT.

package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.swagger.io/support",
            "email": "support@swagger.io"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/accounts": {
            "post": {
                "description": "Create account by username and password",
                "tags": [
                    "accounts"
                ],
                "summary": "Create an account",
                "parameters": [
                    {
                        "description": "Account Request Struct",
                        "name": "accountRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.AccountRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.DocResponseSuccess"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.DocResponseBadRequest"
                        }
                    },
                    "409": {
                        "description": "Account Is Already Existed",
                        "schema": {
                            "$ref": "#/definitions/model.DocResponseAlreadyExisted"
                        }
                    }
                }
            }
        },
        "/login": {
            "post": {
                "description": "Login account and verify username and password",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "accounts"
                ],
                "summary": "Login account",
                "parameters": [
                    {
                        "description": "Account Request Struct",
                        "name": "accountRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.AccountRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.AccountResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.DocResponseBadRequest"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/model.DocResponseWrongPassword"
                        }
                    },
                    "429": {
                        "description": "Too Many Failed Login Attempts",
                        "schema": {
                            "$ref": "#/definitions/model.DocResponseTooManyRequest"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "model.AccountRequest": {
            "type": "object",
            "required": [
                "password",
                "username"
            ],
            "properties": {
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "model.AccountResponse": {
            "type": "object",
            "required": [
                "reason",
                "success"
            ],
            "properties": {
                "reason": {
                    "type": "string"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "model.DocResponseAlreadyExisted": {
            "type": "object",
            "properties": {
                "reason": {
                    "type": "string",
                    "example": "Account is already existed"
                },
                "success": {
                    "type": "boolean",
                    "example": false
                }
            }
        },
        "model.DocResponseBadRequest": {
            "type": "object",
            "properties": {
                "reason": {
                    "type": "string",
                    "example": "Password is too short"
                },
                "success": {
                    "type": "boolean",
                    "example": false
                }
            }
        },
        "model.DocResponseSuccess": {
            "type": "object",
            "properties": {
                "reason": {
                    "type": "string",
                    "example": ""
                },
                "success": {
                    "type": "boolean",
                    "example": true
                }
            }
        },
        "model.DocResponseTooManyRequest": {
            "type": "object",
            "properties": {
                "reason": {
                    "type": "string",
                    "example": "too many failed login attempt, please try it later"
                },
                "success": {
                    "type": "boolean",
                    "example": false
                }
            }
        },
        "model.DocResponseWrongPassword": {
            "type": "object",
            "properties": {
                "reason": {
                    "type": "string",
                    "example": "Wrong password"
                },
                "success": {
                    "type": "boolean",
                    "example": false
                }
            }
        }
    },
    "externalDocs": {
        "description": "OpenAPI",
        "url": "https://swagger.io/resources/open-api/"
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
